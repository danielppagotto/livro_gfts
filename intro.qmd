# Aspectos introdutórios

A seguir listamos algumas recomendações e compreensões importantes antes de qualquer avanço.

-   Todos os **indicadores** listados neste livro **foram construídos com apoio de linguagem R**. **Não é objetivo deste livro servir como um material introdutório sobre R, estatística ou ciência de dados**. Espera-se que o leitor tenha algum domínio da ferramenta.

-   Para rodar os exemplos, **é importante ter algumas bibliotecas instaladas**, como o metapacote `tidyverse`, `DT`, `genderBR`, `microdatasus`, `PNADcIBGE`, `ipeadata`, `remotes`, `readxl`. Para instalar um pacote basta rodar a função abaixo. Apenas o pacote `microdatasus` vai exigir uma lógica diferente, conforme ilustrado.

```{r}
#| eval: FALSE

install.packages("DT")

remotes::install_github("rfsaldanha/microdatasus")

```

-   Algumas variáveis possuem formato de código (ex.: Código Brasileiro de Ocupações - CBO, código IBGE de municípios), conforme veremos a seguir.

## Variáveis em formato de códigos

Conforme informado anteriormente, algumas variáveis possuem formato de códigos. Aqui vamos falar um pouquinho sobre o código IBGE e o código CBO.

### Código IBGE

O **código IBGE** é uma variável que aparece em muitas bases governamentais. Ele é, geralmente, um código composto por seis dígitos que identifica um município. Fazendo um paralelo conosco, **é como se fosse um CPF do município**.

Os **dois primeiros dígitos** geralmente são uma forma de **identificação do estado**. Assim, todos os municípios do Paraná, por exemplo, começam com o dígito 41.

Essa é uma **variável** extremamente importante, pois permite você juntar duas bases (contanto que ambas tenham o código). Posso juntar uma base com população dos municípios com o número de profissionais atuantes, por exemplo.

**Atenção:** Houve um tempo que se usava um sétimo dígito, chamado dígito verificador. Porém, foi caindo em desuso. Se eventualmente você encontrá-lo, sugerimos aplicar a função de `substr`. Vamos ver como fazer isso?

```{r}
#| warning: FALSE 

library(readxl)
library(dplyr)

hierarquia_municipios <- read_excel("bases_apoio/hierarquia_municipios.xlsx")

hierarquia_municipios |> 
  select(cod_municipiodv, uf_sigla, 
         municipio) |> 
  head()

```

Veja que neste exercício temos os seis municípios da base. Todos são de Rondônia e, portanto, começam com 11.

Vamos criar uma nova coluna chamada ibge, sem o sétimo dígito. Para isso, teremos que transformar a variável em `char` (categórica), pois está como numérica (`double`).

```{r}

# transformando a variável em char
hierarquia_municipios$cod_municipiodv <- as.character(hierarquia_municipios$cod_municipiodv)

# aplicando o substr e criando uma nova variável por meio da função mutate

hierarquia_municipios |> 
  select(cod_municipiodv, uf_sigla, 
         municipio) |>
  mutate(ibge = substr(cod_municipiodv, 1, 6)) |> 
  head()


```

### CBO

O código CBO - [Classificação Brasileira de Ocupações](https://cbo.mte.gov.br/cbosite/pages/home.jsf) - foi estabelecido portaria do Ministério do Trabalho e Emprego nº. 397, de 9 de outubro de 2002.

O código é composto por seis dígitos. Os quatro primeiros dígintos representam uma família de CBO e os demais descrevem a profissão detalhadamente. Por exemplo: Todo cirurgião dentista é identificado tem seu código iniciado 2232. Mas o cirurgião dentista - endodontista é 2232-12,o odontopediatra é 2232-36.

Abaixo você consegue verificar lista completa de profissões e os respectivos códigos.

```{r}
#| warning: FALSE 

library(DT)
library(readr)

cbo_completo <- read_csv("bases_apoio/cbo_completo.csv")

datatable(cbo_completo)

```

Abaixo você consegue verificar lista de famílias de profissões e os respectivos códigos.

```{r}
#| warning: FALSE 

cbo_familia <- read_delim("bases_apoio/CBO2002 - Familia.csv", 
                                      delim = ";", escape_double = FALSE, 
                                      locale = locale(date_names = "pt", 
                                                      encoding = "ISO-8859-1", 
                                                      asciify = TRUE), trim_ws = TRUE)

datatable(cbo_familia)

```
