library(forcats)
library(ggplot2)
#| echo: FALSE
#| output: FALSE
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
# Chunk 1
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
# Chunk 1
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
# Chunk 2
#| echo: FALSE
#| output: FALSE
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
# Chunk 1
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
# Chunk 2
#| echo: FALSE
#| output: FALSE
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
# Chunk 3
#| warning: FALSE
#| eval: FALSE
cnes_pf_rr <- fetch_datasus(year_start = 2023, month_start = 1,
year_end = 2023, month_end = 1,
uf = "RR", information_system = "CNES-PF")
# Chunk 1
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
# Chunk 2
#| echo: FALSE
#| output: FALSE
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
# Chunk 3
#| warning: FALSE
#| eval: FALSE
cnes_pf_rr <- fetch_datasus(year_start = 2023, month_start = 1,
year_end = 2023, month_end = 1,
uf = "RR", information_system = "CNES-PF")
# Chunk 4
#| warning: FALSE
#| eval: FALSE
cnes_tratado <-
cnes_pf_manutencao |>
filter(str_detect(CBO, "2235")) |>
select(CODUFMUN, CBO, VINCULAC)
# Chunk 1
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
# Chunk 2
#| echo: FALSE
#| output: FALSE
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
# Chunk 3
#| warning: FALSE
#| eval: FALSE
cnes_pf_rr <- fetch_datasus(year_start = 2023, month_start = 1,
year_end = 2023, month_end = 1,
uf = "RR", information_system = "CNES-PF")
# Chunk 4
#| warning: FALSE
#| eval: FALSE
cnes_tratado <-
cnes_pf_manutencao |>
filter(str_detect(CBO, "2235")) |>
select(CODUFMUN, CBO, VINCULAC)
# Chunk 5
#| warning: FALSE
#| eval: FALSE
vinculac <- read_delim("bases_apoio/vinculac.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
vinculac |>
datatable()
# Chunk 1
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
# Chunk 2
#| echo: FALSE
#| output: FALSE
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
# Chunk 3
#| warning: FALSE
#| eval: FALSE
cnes_pf_rr <- fetch_datasus(year_start = 2023, month_start = 1,
year_end = 2023, month_end = 1,
uf = "RR", information_system = "CNES-PF")
# Chunk 4
#| warning: FALSE
#| eval: FALSE
cnes_tratado <-
cnes_pf_manutencao |>
filter(str_detect(CBO, "2235")) |>
select(CODUFMUN, CBO, VINCULAC)
# Chunk 5
#| warning: FALSE
#| eval: FALSE
vinculac <- read_delim("bases_apoio/vinculac.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
vinculac |>
datatable()
# Chunk 6
#| warning: FALSE
#| eval: FALSE
# transformando a variável para tipo numérico para conseguir juntar
cnes_tratado$VINCULAC <- as.numeric(cnes_tratado$VINCULAC)
# Juntar conforme as duas colunas equivalentes - VINCULAC e CHAVE
cnes_join <-
cnes_tratado |>
left_join(vinculac, by = c("VINCULAC"="CHAVE"))
cnes_join |>
head()
# Chunk 1
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
# Chunk 2
#| echo: FALSE
#| output: FALSE
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
# Chunk 3
#| warning: FALSE
#| eval: FALSE
cnes_pf_rr <- fetch_datasus(year_start = 2023, month_start = 1,
year_end = 2023, month_end = 1,
uf = "RR", information_system = "CNES-PF")
# Chunk 4
#| warning: FALSE
#| eval: FALSE
cnes_tratado <-
cnes_pf_manutencao |>
filter(str_detect(CBO, "2235")) |>
select(CODUFMUN, CBO, VINCULAC)
# Chunk 5
#| warning: FALSE
#| eval: FALSE
vinculac <- read_delim("bases_apoio/vinculac.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
vinculac |>
datatable()
# Chunk 6
#| warning: FALSE
#| eval: FALSE
# transformando a variável para tipo numérico para conseguir juntar
cnes_tratado$VINCULAC <- as.numeric(cnes_tratado$VINCULAC)
# Juntar conforme as duas colunas equivalentes - VINCULAC e CHAVE
cnes_join <-
cnes_tratado |>
left_join(vinculac, by = c("VINCULAC"="CHAVE"))
cnes_join |>
head()
# Chunk 7
#| warning: FALSE
#| eval: FALSE
cnes_join <-
cnes_join |>
count(CODUFMUN, classificacao) %>%
group_by(CODUFMUN) %>%
mutate(freq = n / sum(n)) |>
mutate(freq = round(freq, 2))
hierarquia_municipios <- read_excel("bases_apoio/hierarquia_municipios.xlsx")
precarizacao <-
cnes_join |>
left_join(hierarquia_municipios, by = c("CODUFMUN"="cod_municipio")) |>
select(CODUFMUN, cod_municipiodv, municipio, uf_sigla, classificacao, freq )
precarizacao |>
datatable()
# Chunk 8
#| warning: FALSE
#| eval: FALSE
precarizacao <-
precarizacao |>
filter(classificacao == "Precarizado")
# Chunk 9
#| warning: FALSE
#| output: FALSE
rr <- read_municipality(code_muni = "RR", year = 2020)
rr$code_muni <- as.character(rr$code_muni)
shapefile_combinado <- merge(x = rr,
y = precarizacao,
by.x = "code_muni",
by.y = "cod_municipiodv")
# Chunk 10
#| warning: FALSE
#| eval: FALSE
shapefile_combinado |>
mapview(zcol = "freq")
#| echo: FALSE
#| output: FALSE
ch_media_capitais <- read_csv("bases_apoio/ch_media_capitais.csv")
hierarquia_municipios <- read_excel("bases_apoio/hierarquia_municipios.xlsx")
#| warning: FALSE
#| eval: FALSE
ch_media_capitais <- ch_media_capitais %>%
left_join(hierarquia_municipios, by = c("CODUFMUN" = "cod_municipio")) %>%
select("municipio_pad", "MEDIA_PROF")
#| warning: FALSE
#| eval: FALSE
ch_media_capitais %>%
mutate(municipio_pad = fct_reorder(municipio_pad, MEDIA_PROF)) %>%
ggplot(aes(x = municipio_pad, y = MEDIA_PROF)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "Capitais", y = "Média de horas trabalhadas", title = "Carga horária de trabalho média")
equipamento_1000_habitantes %>%
mutate(regiao_saude = fct_reorder(regiao_saude, equipamento_1000_habitantes)) %>%
ggplot(aes(x = regiao_saude, y = equipamento_1000_habitantes)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "Capitais", y = "Média de horas trabalhadas", title = "Carga horária de trabalho média")
equipamento_1000_habitantes %>%
mutate(regiao_saude = fct_reorder(regiao_saude, equipamento_1000_habitantes)) %>%
ggplot(aes(x = regiao_saude, y = equipamento_1000_habitantes)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "Capitais", y = "Média de horas trabalhadas", title = "Carga horária de trabalho média")
ggplot(equipamento_1000_habitantes, aes(x = regiao_saude, y = equipamento_1000_habitantes)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Equipamento por 1000 Habitantes por Região de Saúde",
x = "Região de Saúde",
y = "Equipamento por 1000 Habitantes")
ggplot(equipamento_1000_habitantes, aes(x = regiao_saude, y = equipamento_1000_habitantes)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(title = "Equipamento por 1000 Habitantes por Região de Saúde",
x = "Região de Saúde",
y = "Equipamento por 1000 Habitantes")
#| warning: FALSE
#| output: FALSE
equipamento_paraná <- read_csv("bases_apoio/equipamento_1000_habitantes.csv")
#| warning: FALSE
#| output: FALSE
equipamento_parana <- read_csv("bases_apoio/equipamento_1000_habitantes.csv")
#| warning: FALSE
#| eval: FALSE
equipamento_parana %>%
mutate(regiao_saude = fct_reorder(regiao_saude, equipamento_1000_habitantes)) %>%
ggplot(aes(x = regiao_saude, y = equipamento_1000_habitantes)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "Regiões de Saúde do Paraná", y = "Densidade de Equipamentos",
title = "Quantidade de equipamentos por mil habitantes")
#| warning: FALSE
#| eval: FALSE
equipamento_parana %>%
mutate(regiao_saude = fct_reorder(regiao_saude, equipamento_1000_habitantes)) %>%
ggplot(aes(x = regiao_saude, y = equipamento_1000_habitantes)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "Regiões de Saúde", y = "Densidade de Equipamentos",
title = "Quantidade de equipamentos por mil habitantes do Paraná")
#| warning: FALSE
#| eval: FALSE
quantidade_leitos <- read_csv("bases_apoio/quantidade_leitos.csv")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
quantidade_leitos <- read_csv("bases_apoio/quantidade_leitos.csv")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
quantidade_leitos <- read_csv("bases_apoio/quantidade_leitos.csv")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
ggplot(dados, aes(x = competen_ano, y = total_leitos_uti)) +
geom_line(color = "blue") +
labs(title = "Evolução dos Leitos de UTI ao Longo dos Anos",
x = "Ano",
y = "Total de Leitos de UTI")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
ggplot(dados, aes(x = ano, y = total_leitos_uti)) +
geom_line(color = "blue") +
labs(title = "Evolução dos Leitos de UTI ao Longo dos Anos",
x = "Ano",
y = "Total de Leitos de UTI")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
ggplot(dados, aes(x = ano, y = total_leitos_uti)) +
geom_line(color = "blue") +
labs(title = "Evolução dos Leitos de UTI ao Longo dos Anos",
x = "Ano",
y = "Total de Leitos de UTI")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
ggplot(quantidade_leitos, aes(x = ano, y = total_leitos_uti)) +
geom_line(color = "blue") +
labs(title = "Evolução dos Leitos de UTI ao Longo dos Anos",
x = "Ano",
y = "Total de Leitos de UTI")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
ggplot(quantidade_leitos, aes(x = ano, y = total_leitos_uti)) +
geom_line(color = "blue") +
labs(title = "Quantidade de Leitos de UTI ao Longo dos Anos",
x = "Ano",
y = "Total de Leitos de UTI")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
ggplot(quantidade_leitos, aes(x = ano, y = total_leitos_uti)) +
geom_line(color = "blue") +
labs(title = "Quantidade de Leitos de UTI ao Longo dos Anos em Belém",
x = "Ano",
y = "Total de Leitos de UTI")
#| warning: FALSE
#| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
#| echo: FALSE
#| output: FALSE
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
#| warning: FALSE
#| eval: FALSE
cnes_pf_rr <- fetch_datasus(year_start = 2023, month_start = 1,
year_end = 2023, month_end = 1,
uf = "RR", information_system = "CNES-PF")
vinculac <- read_delim("bases_apoio/vinculac.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
vinculac |>
datatable()
# transformando a variável para tipo numérico para conseguir juntar
cnes_tratado$VINCULAC <- as.numeric(cnes_tratado$VINCULAC)
cnes_join <-
cnes_join |>
count(CODUFMUN, classificacao) %>%
group_by(CODUFMUN) %>%
mutate(freq = n / sum(n)) |>
mutate(freq = round(freq, 2))
#| warning: FALSE
#| eval: FALSE
cnes_tratado <-
cnes_pf_manutencao |>
filter(str_detect(CBO, "2235")) |>
select(CODUFMUN, CBO, VINCULAC)
#| warning: FALSE
#| eval: FALSE
vinculac <- read_delim("bases_apoio/vinculac.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
vinculac |>
datatable()
#| warning: FALSE
#| eval: FALSE
# transformando a variável para tipo numérico para conseguir juntar
cnes_tratado$VINCULAC <- as.numeric(cnes_tratado$VINCULAC)
# Juntar conforme as duas colunas equivalentes - VINCULAC e CHAVE
cnes_join <-
cnes_tratado |>
left_join(vinculac, by = c("VINCULAC"="CHAVE"))
cnes_join |>
head()
#| warning: FALSE
#| eval: FALSE
cnes_join <-
cnes_join |>
count(CODUFMUN, classificacao) %>%
group_by(CODUFMUN) %>%
mutate(freq = n / sum(n)) |>
mutate(freq = round(freq, 2))
hierarquia_municipios <- read_excel("bases_apoio/hierarquia_municipios.xlsx")
precarizacao <-
cnes_join |>
left_join(hierarquia_municipios, by = c("CODUFMUN"="cod_municipio")) |>
select(CODUFMUN, cod_municipiodv, municipio, uf_sigla, classificacao, freq )
precarizacao |>
datatable()
#| warning: FALSE
#| eval: FALSE
precarizacao <-
precarizacao |>
filter(classificacao == "Precarizado")
#| warning: FALSE
#| output: FALSE
rr <- read_municipality(code_muni = "RR", year = 2020)
rr$code_muni <- as.character(rr$code_muni)
shapefile_combinado <- merge(x = rr,
y = precarizacao,
by.x = "code_muni",
by.y = "cod_municipiodv")
#| warning: FALSE
#| eval: FALSE
shapefile_combinado |>
mapview(zcol = "freq")
#| warning: FALSE
#| output: FALSE
cpfprof_10mil_habitantes <- read_csv("bases_apoio/cpfprof_10mil_habitantes.csv")
#| warning: FALSE
#| output: FALSE
cpfprof_10mil_habitantes %>%
mutate(uf = fct_reorder(uf, cpf_prof_por_10000)) %>%
ggplot(aes(x = uf, y = cpf_prof_por_10000)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "UF", y = "Médicos por 10mil habitantes", title = "Densidade de profissionais de saúde atuantes")
