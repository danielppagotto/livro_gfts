cnes_pf_manutencao |>
filter(str_detect(CBO, "225")) |>
select(CODUFMUN, CBO, VINCULAC)
library(microdatasus)
library(tidyverse)
library(DT)
library(readxl)
library(mapview)
library(geobr)
cnes_tratado <-
cnes_pf_manutencao |>
filter(str_detect(CBO, "225")) |>
select(CODUFMUN, CBO, VINCULAC)
cnes_tratado <-
cnes_pf_manutencao |>
filter(str_detect(CBO, "225")) |>
select(CODUFMUN, CBO, VINCULAC)
View(cnes_tratado)
cnes_tratado <-
cnes_pf_manutencao |>
filter(COMPETEN == '202301',
str_detect(CBO, "225")) |>
select(CODUFMUN, CBO, CPF_PROF, HORAOUTR, HORAHOSP, HORA_AMB)
View(cnes_tratado)
cnes_tratado <-
cnes_pf_manutencao |>
filter(COMPETEN == '202301',
str_detect(CBO, "225")) |>
select(CODUFMUN, CBO, CPF_PROF, HORAOUTR, HORAHOSP, HORA_AMB) |>
mutate(HORA = HORAOUTR + HORAHOSP + HORA_AMB)
View(cnes_tratado)
consulta_ch_individual <- cnes_tratado %>%
group_by(CODUFMUN, CPF_PROF) %>%
summarise(CH_INDIVIDUAL = sum(HORA))
View(consulta_ch_individual)
mutate(HORA = HORAOUTR + HORAHOSP + HORA_AMB)
cnes_tratado <-
cnes_pf_manutencao |>
filter(COMPETEN == '202301',
str_detect(CBO, "225"),
CODUFMUN %in% c('120040', '270430', '160030', '130260',
'292740', '230440', '530010', '320530',
'520870', '211130', '510340', '500270',
'310620', '150140', '250750', '410690',
'261160', '221100', '330455', '240810',
'431490', '110020', '140010', '420540',
'355030', '280030', '172100') |>
select(CODUFMUN, CBO, CPF_PROF, HORAOUTR, HORAHOSP, HORA_AMB) |>
mutate(HORA = HORAOUTR + HORAHOSP + HORA_AMB)
View(cnes_tratado)
View(cnes_tratado)
cnes_tratado <-
cnes_pf_manutencao |>
filter(COMPETEN == '202301',
str_detect(CBO, "225"),
CODUFMUN %in% c('120040', '270430', '160030', '130260',
'292740', '230440', '530010', '320530',
'520870', '211130', '510340', '500270',
'310620', '150140', '250750', '410690',
'261160', '221100', '330455', '240810',
'431490', '110020', '140010', '420540',
'355030', '280030', '172100')) |>
select(CODUFMUN, CBO, CPF_PROF, HORAOUTR, HORAHOSP, HORA_AMB) |>
mutate(HORA = HORAOUTR + HORAHOSP + HORA_AMB)
View(cnes_tratado)
cnes_tratado <-
cnes_pf_manutencao |>
filter(COMPETEN == '202301',
str_detect(CBO, "225"),
CODUFMUN %in% c('120040', '270430', '160030', '130260',
'292740', '230440', '530010', '320530',
'520870', '211130', '510340', '500270',
'310620', '150140', '250750', '410690',
'261160', '221100', '330455', '240810',
'431490', '110020', '140010', '420540',
'355030', '280030', '172100'))
View(cnes_tratado)
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
View(cnes_pf_manutencao)
cnes_PF <- read_csv("bases_apoio/cnes.PF.csv")
cnes_tratado <-
cnes_PF |>
filter(COMPETEN == '202301',
str_detect(CBO, "225"),
CODUFMUN %in% c('120040', '270430', '160030', '130260',
'292740', '230440', '530010', '320530',
'520870', '211130', '510340', '500270',
'310620', '150140', '250750', '410690',
'261160', '221100', '330455', '240810',
'431490', '110020', '140010', '420540',
'355030', '280030', '172100'))
cnes_PF <- read_csv("bases_apoio/cnes.PF.csv")
cnes_PF <- read_csv("bases_apoio/cnes.PF.csv")
cnes_tratado <-
cnes_PF |>
filter(COMPETEN == '202301'
cnes_tratado <-
cnes_tratado <-
cnes_PF %>%
filter(COMPETEN == '202301',
str_detect(CBO, "225")
cnes_PF <- read_csv("bases_apoio/cnes.PF.csv")
cnes_PF <- read_csv("bases_apoio/cnes.PF.csv")
cnes_tratado <-
cnes_PF %>%
filter(COMPETEN == '202301',
str_detect(CBO, "225")
cnes_tratado <-
cnes_tratado <-
cnes_PF %>%
filter(COMPETEN == '202301',
str_detect(CBO, "225"),
CODUFMUN %in% c('120040', '270430', '160030', '130260',
'292740', '230440', '530010', '320530',
'520870', '211130', '510340', '500270',
'310620', '150140', '250750', '410690',
'261160', '221100', '330455', '240810',
'431490', '110020', '140010', '420540',
'355030', '280030', '172100')) |>
select(CODUFMUN, CBO, CPF_PROF, HORAOUTR, HORAHOSP, HORA_AMB) |>
mutate(HORA = HORAOUTR + HORAHOSP + HORA_AMB)
mutate(HORA = HORAOUTR + HORAHOSP + HORA_AMB)
mutate(HORA = HORAOUTR + HORAHOSP + HORA_AMB)
View(cnes_PF)
capitais <- c('120040', '270430', '160030', '130260',
'292740', '230440', '530010', '320530',
'520870', '211130', '510340', '500270',
'310620', '150140', '250750', '410690',
'261160', '221100', '330455', '240810',
'431490', '110020', '140010', '420540',
'355030', '280030', '172100')
cnes_tratadoo <-
cnes_PF %>%
filter(COMPETEN == '202301',
str_detect(CBO, "225"),
CODUFMUN %in% capitais)
cnes_tratadoo <-
cnes_PF %>%
filter(COMPETEN == '202301',
str_detect(CBO, "225")
cnes_tratadoo <-
cnes_tratadoo <-
cnes_PF %>%
filter(COMPETEN == '202301')
cnes_tratadoo <-
cnes_PF
cnes_tratadoo <-
cnes_PF %>%
filter(COMPETEN == '202301')
select(CODUFMUN, CBO, CPF_PROF, HORAOUTR, HORAHOSP, HORA_AMB) %>%
mutate(HORA = HORAOUTR + HORAHOSP + HORA_AMB)
print(nrow(cnes_PF))
cnes_tratado <- cnes_PF %>% filter(COMPETEN == '202301')
print(nrow(cnes_tratado))
(str(cnes_PF))
cnes_tratadoo <-
cnes_PF %>%
mutate(COMPETEN = as.character(COMPETEN))
filter(COMPETEN == '202301')
cnes_tratadoo <-
cnes_PF %>%
mutate(COMPETEN = as.character(COMPETEN))
cnes_tratado <-
cnes_PF %>%
mutate(COMPETEN = as.character(COMPETEN))
cnes_tratado <-
cnes_PF %>%
mutate(COMPETEN = as.character(COMPETEN)) %>%
filter(COMPETEN == '202301')
View(cnes_tratado)
cnes_tratado <-
cnes_PF %>%
mutate(COMPETEN = as.character(COMPETEN))
af <- cnes_tratado %>%
filter(COMPETEN == '202301')
View(cnes_tratado)
af <- cnes_tratado %>%
filter(COMPETEN == '202305')
cnes_tratado <-
cnes_PF %>%
mutate(COMPETEN = as.character(COMPETEN)) %>%
filter(COMPETEN == '202305'),
cnes_tratado <-
cnes_PF %>%
mutate(COMPETEN = as.character(COMPETEN)) %>%
filter(COMPETEN == '202305',
str_detect(CBO, "225"),
CODUFMUN %in% capitais) %>%
select(CODUFMUN, CBO, CPF_PROF, HORAOUTR, HORAHOSP, HORA_AMB) %>%
mutate(HORA = HORAOUTR + HORAHOSP + HORA_AMB)
consulta_ch_individual <- cnes_tratado %>%
group_by(CODUFMUN, CPF_PROF) %>%
summarise(CH_INDIVIDUAL = sum(HORA))
View(consulta_ch_individual)
capitais <- c('120040', '270430', '160030', '130260',
'292740', '230440', '530010', '320530',
'520870', '211130', '510340', '500270',
'310620', '150140', '250750', '410690',
'261160', '221100', '330455', '240810',
'431490', '110020', '140010', '420540',
'355030', '280030', '172100')
cnes_tratado <-
cnes_PF %>%
mutate(COMPETEN = as.character(COMPETEN)) %>%
filter(COMPETEN == '202305',
str_detect(CBO, "225"),
CODUFMUN %in% capitais) %>%
select(CODUFMUN, CBO, CPF_PROF, HORAOUTR, HORAHOSP, HORA_AMB) %>%
mutate(HORA = HORAOUTR + HORAHOSP + HORA_AMB)
View(cnes_tratado)
mutate(HORA = HORAOUTR + HORAHOSP + HORA_AMB)
cnes_tratado <-
cnes_PF %>%
mutate(COMPETEN = as.character(COMPETEN)) %>%
filter(COMPETEN == '202305',
str_detect(CBO, "225") %>%
select(CODUFMUN, CBO, CPF_PROF, HORAOUTR, HORAHOSP, HORA_AMB) %>%
mutate(HORA = HORAOUTR + HORAHOSP + HORA_AMB)
View(cnes_tratado)
View(cnes_tratado)
library(readr)
ch_media_capitais <- read_csv("bases_apoio/ch_media_capitais.csv")
hierarquia_municipios <- read_excel("bases_apoio/hierarquia_municipios.xlsx")
library(readxl)
hierarquia_municipios <- read_excel("bases_apoio/hierarquia_municipios.xlsx")
View(hierarquia_municipios)
View(ch_media_capitais)
ch_media_capitais <- ch_media_capitais %>%
left_join(hierarquia_municipios, by = c("CODUFMUN"="cod_municipio"))
library(readr)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(readxl)
library(mapview)
library(geobr)
ch_media_capitais <- ch_media_capitais %>%
left_join(hierarquia_municipios, by = c("CODUFMUN"="cod_municipio"))
View(ch_media_capitais)
ch_media_capitais <- read_csv("bases_apoio/ch_media_capitais.csv")
View(ch_media_capitais)
ch_media_capitais <- ch_media_capitais %>%
left_join(hierarquia_municipios, by = c("CODUFMUN"="cod_municipio")) %>%
select("cod_municipio", "MEDIA_PROF")
ch_media_capitais <- ch_media_capitais %>%
left_join(hierarquia_municipios, by = c("CODUFMUN"="cod_municipio")) %>%
select("cod_municipio", "MEDIA_PROF")
ch_media_capitais <- ch_media_capitais %>%
left_join(hierarquia_municipios, by = c("CODUFMUN"="cod_municipio")) %>%
select('cod_municipio', 'MEDIA_PROF')
ch_media_capitais <- ch_media_capitais %>%
left_join(hierarquia_municipios, by = c("CODUFMUN"="cod_municipio")) %>%
select("cod_municipio", "MEDIA_PROF")
vinculos_medio <- read_csv("bases_apoio/vinculos_medio.csv") %>%
left_join(hierarquia_municipios, by = c("CODUFMUN"="cod_municipio")) %>%
select("uf_sigla", "CBO", "CPF_PROF", "municipio_pad")
View(vinculos_medio)
ch_media_capitais <- ch_media_capitais %>%
left_join(hierarquia_municipios, by = c("CODUFMUN"="cod_municipio")) %>%
select("municipio_pad", "MEDIA_PROF")
View(ch_media_capitais)
library(forcats) #ordernar coluna
ch_media_capitais %>%
mutate(municipio_pad = fct_reorder(municipio_pad, MEDIA_PROF)) %>%
ggplot(aes(x = municipio_pad, y = MEDIA_PROF)) +
geom_col(color = "White") +
coord_flip() +
theme_bw() +
labs(x = "Município", y = "Média de Vínculos", title = "Média de Vínculos por Profissional")
ch_media_capitais %>%
ggplot(aes(x = 1, y = MEDIA_PROF)) +
geom_violin(fill = "purple") +
theme_void() +
labs(x = "", y = "Média de Vínculos", title = "Média de Vínculos por Profissional")
hierarquia_municipios <- read_excel("bases_apoio/hierarquia_municipios.xlsx")
ch_media_capitais <- read_csv("bases_apoio/ch_media_capitais.csv")
View(hierarquia_municipios)
View(ch_media_capitais)
ch_media_capitais <- ch_media_capitais %>%
left_join(hierarquia_municipios, by = c("CODUFMUN" = "cod_municipo")) %>%
select("municipio_pad", "MEDIA_PROF")
ch_media_capitais <- ch_media_capitais %>%
left_join(hierarquia_municipios, by = c("cod_municipo" = "CODUFMUN")) %>%
select("municipio_pad", "MEDIA_PROF")
ch_media_capitais <- ch_media_capitais %>%
left_join(hierarquia_municipios, by = c("CODUFMUN" = "cod_municipio")) %>%
select("municipio_pad", "MEDIA_PROF")
ch_media_capitais %>%
ggplot(aes(x = MEDIA_PROF, y = municipio_pad)) +
geom_point(color = "blue") +
theme_bw() +
labs(x = "Média de Vínculos", y = "Município", title = "Média de Vínculos por Profissional")
ch_media_capitais %>%
ggplot(aes(x = municipio_pad, y = MEDIA_PROF, group = 1)) +
geom_line(color = "green") +
geom_point(color = "green", size = 2) +
theme_bw() +
labs(x = "Município", y = "Média de Vínculos", title = "Média de Vínculos por Profissional")
ch_media_capitais %>%
ggplot(aes(x = municipio_pad, y = MEDIA_PROF, fill = factor(MEDIA_PROF))) +
geom_bar(stat = "identity") +
theme_bw() +
labs(x = "Município", y = "Média de Vínculos", title = "Média de Vínculos por Profissional")
ch_media_capitais %>%
ggplot(aes(x = "", y = MEDIA_PROF, fill = municipio_pad)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
theme_void() +
labs(x = "", y = "Média de Vínculos", title = "Média de Vínculos por Profissional")
ch_media_capitais %>%
mutate(municipio_pad = fct_reorder(municipio_pad, MEDIA_PROF)) %>%
ggplot(aes(x = municipio_pad, y = MEDIA_PROF)) +
geom_col(color = "White") +
coord_flip() +
theme_bw() +
labs(x = "Município", y = "Média de Vínculos", title = "Média de Vínculos por Profissional")
ch_media_capitais %>%
mutate(municipio_pad = fct_reorder(municipio_pad, MEDIA_PROF)) %>%
ggplot(aes(x = municipio_pad, y = MEDIA_PROF)) +
geom_col(color = "White") +
coord_flip() +
theme_bw() +
labs(x = "Capitais", y = "Média de horas trabalhadas", title = "Carga horária de trabalho média")
library(readr)
library(readxl)
cpfprof_10mil_habitantes <- read_csv("bases_apoio/cpfprof_10mil_habitantes.csv")
library(ggplot2)
# Se df é o seu dataframe resultante da consulta
ggplot(df, aes(x = populacao, y = cpf_prof_por_10000, color = uf)) +
geom_point() +
labs(title = "Relação entre População e CPF_PROF por 10.000 Pessoas por Estado", x = "População", y = "CPF_PROF por 10.000 pessoas")
library(ggplot2)
# Se df é o seu dataframe resultante da consulta
ggplot(df, aes(x = populacao, y = cpf_prof_por_10000, color = uf)) +
geom_point() +
labs(title = "Relação entre População e CPF_PROF por 10.000 Pessoas por Estado", x = "População", y = "CPF_PROF por 10.000 pessoas")
# Se df é o seu dataframe resultante da consulta
grafico <- ggplot(df, aes(x = populacao, y = cpf_prof_por_10000, color = uf)) %>%
geom_point() %>%
labs(title = "Relação entre População e CPF_PROF por 10.000 Pessoas por Estado", x = "População", y = "CPF_PROF por 10.000 pessoas")
grafico <- ggplot(df, aes(x = populacao, y = cpf_prof_por_10000, color = uf))
cpfprof_10mil_habitantes <- read_csv("bases_apoio/cpfprof_10mil_habitantes.csv")
grafico <- ggplot(cpfprof_10mil_habitantes, aes(x = populacao, y = cpf_prof_por_10000, color = uf)) %>%
geom_point() %>%
labs(title = "Relação entre População e CPF_PROF por 10.000 Pessoas por Estado", x = "População", y = "CPF_PROF por 10.000 pessoas")
library(dplyr)
library(ggplot2)
grafico <- ggplot(cpfprof_10mil_habitantes, aes(x = populacao, y = cpf_prof_por_10000, color = uf)) %>%
geom_point() %>%
labs(title = "Relação entre População e CPF_PROF por 10.000 Pessoas por Estado", x = "População", y = "CPF_PROF por 10.000 pessoas")
library(ggplot2)
grafico <- ggplot(cpfprof_10mil_habitantes, aes(x = populacao, y = cpf_prof_por_10000, color = uf)) +
geom_point() +
labs(title = "Relação entre População e CPF_PROF por 10.000 Pessoas por Estado", x = "População", y = "CPF_PROF por 10.000 pessoas")
library(ggplot2)
grafico <- ggplot(cpfprof_10mil_habitantes, aes(x = populacao, y = cpf_prof_por_10000, color = uf)) +
geom_point() +
labs(title = "Relação entre População e CPF_PROF por 10.000 Pessoas por Estado", x = "População", y = "CPF_PROF por 10.000 pessoas")
library(ggplot2)
grafico <- ggplot(cpfprof_10mil_habitantes, aes(x = populacao, y = cpf_prof_por_10000, color = uf)) +
geom_point() +
labs(title = "Relação entre População e CPF_PROF por 10.000 Pessoas por Estado", x = "População", y = "CPF_PROF por 10.000 pessoas")
View(grafico)
library(ggplot2)
ggplot(cpfprof_10mil_habitantes, aes(x = populacao, y = cpf_prof_por_10000, color = uf)) +
geom_point() +
labs(title = "Relação entre População e CPF_PROF por 10.000 Pessoas por Estado", x = "População", y = "CPF_PROF por 10.000 pessoas")
library(ggplot2)
ggplot(cpfprof_10mil_habitantes, aes(x = populacao, y = cpf_prof_por_10000, color = uf)) +
geom_point() +
labs(title = "Relação entre População e CPF_PROF por 10.000 Pessoas por Estado", x = "População", y = "CPF_PROF por 10.000 pessoas")
cpfprof_10mil_habitantes <- read_csv("bases_apoio/cpfprof_10mil_habitantes.csv")
View(consulta_ch_individual)
View(cpfprof_10mil_habitantes)
library(ggplot2)
#| echo: FALSE
#| output: FALSE
library(readr)
library(readxl)
ch_media_capitais <- read_csv("GitHub/livro_gfts/bases_apoio/ch_media_capitais.csv")
ch_media_capitais <- read_csv("bases_apoio/ch_media_capitais.csv")
hierarquia_municipios <- read_excel("GitHub/livro_gfts/bases_apoio/hierarquia_municipios.xlsx")
hierarquia_municipios <- read_excel("bases_apoio/hierarquia_municipios.xlsx")
ch_media_capitais <- ch_media_capitais %>%
left_join(hierarquia_municipios, by = c("CODUFMUN" = "cod_municipio")) %>%
select("municipio_pad", "MEDIA_PROF")
ch_media_capitais %>%
mutate(municipio_pad = fct_reorder(municipio_pad, MEDIA_PROF)) %>%
ggplot(aes(x = municipio_pad, y = MEDIA_PROF)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "Capitais", y = "Média de horas trabalhadas", title = "Carga horária de trabalho média")
library(forcats)
ch_media_capitais %>%
mutate(municipio_pad = fct_reorder(municipio_pad, MEDIA_PROF)) %>%
ggplot(aes(x = municipio_pad, y = MEDIA_PROF)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "Capitais", y = "Média de horas trabalhadas", title = "Carga horária de trabalho média")
cpfprof_10mil_habitantes %>%
mutate(uf = fct_reorder(uf, cpf_prof_por_10000)) %>%
ggplot(aes(x = uf, y = cpf_prof_por_10000)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "UF", y = "Médicos por 10mil habitantes", title = "Densidade de profissionais de saúde atuantes")
ggplot(cpfprof_10mil_habitantes, aes(x = populacao, y = cpf_prof_por_10000, color = uf)) +
geom_point() +
labs(title = "Relação entre População e CPF_PROF por 10.000 Pessoas por Estado", x = "População", y = "CPF_PROF por 10.000 pessoas")
cpfprof_10mil_habitantes %>%
mutate(uf = fct_reorder(uf, cpf_prof_por_10000)) %>%
ggplot(aes(x = uf, y = cpf_prof_por_10000)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "UF", y = "Médicos por 10mil habitantes", title = "Densidade de profissionais de saúde atuantes")
cpfprof_10mil_habitantes %>%
mutate(uf = fct_reorder(uf, cpf_prof_por_10000)) %>%
ggplot(aes(x = uf, y = cpf_prof_por_10000)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "UF", y = "Médicos por 10mil habitantes", title = "Densidade de profissionais de saúde atuantes")
library(readr)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(readxl)
library(mapview)
library(geobr)
cpfprof_10mil_habitantes %>%
mutate(uf = fct_reorder(uf, cpf_prof_por_10000)) %>%
ggplot(aes(x = uf, y = cpf_prof_por_10000)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "UF", y = "Médicos por 10mil habitantes", title = "Densidade de profissionais de saúde atuantes")
cpfprof_10mil_habitantes <- read_csv("bases_apoio/cpfprof_10mil_habitantes.csv")
cpfprof_10mil_habitantes %>%
mutate(uf = fct_reorder(uf, cpf_prof_por_10000)) %>%
ggplot(aes(x = uf, y = cpf_prof_por_10000)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "UF", y = "Médicos por 10mil habitantes", title = "Densidade de profissionais de saúde atuantes")
library(readr)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(readxl)
library(mapview)
library(geobr)
#| warning: FALSE
ind_prof_goias <- read_csv("bases_apoio/ind_prof_goias.csv") %>%
distinct()
#| warning: FALSE
ind_prof_goias <- ind_prof_goias %>%
mutate(sexo = get_gender(NOMEPROF))
#| warning: FALSE
ind_prof_goias <- ind_prof_goias %>%
filter(sexo != 'NA') %>%
count(CODUFMUN, sexo) %>%
group_by(CODUFMUN) %>%
mutate(freq = n / sum(n)) %>%
mutate(freq = round(freq, 2)) %>%
filter(sexo == "Female")
maps_GO <- read_csv("bases_apoio/ind_prof_goias.csv") %>%
distinct()
#| warning: FALSE
#| output: FALSE
go <- read_municipality(code_muni = "GO", year = 2020)
go$code_muni <- as.character(go$code_muni)
go <- go %>%
mutate(cod_muni_6 = substr(code_muni, 1, 6))
shapefile_combinado <- merge(x = go,
y = ind_prof_goias,
by.x = "cod_muni_6",
by.y = "CODUFMUN")
#| warning: FALSE
#| output: FALSE
shapefile_combinado |>
mapview(zcol = "freq")
#| warning: FALSE
#| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
install.packages(c("askpass", "brew", "brio", "bslib", "checkmate", "cli", "convey", "cpp11", "credentials", "crosstalk", "curl", "data.table", "datawizard", "DBI", "dbplyr", "desc", "descr", "digest", "dplyr", "DT", "evaluate", "fansi", "fontawesome", "fs", "gargle", "geobr", "geometries", "gert", "ggplot2", "ggrepel", "glue", "gtable", "haven", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr2", "insight", "jsonlite", "knitr", "labeling", "later", "lifecycle", "lme4", "lubridate", "markdown", "Matrix", "MatrixModels", "memisc", "minqa", "openssl", "pkgbuild", "pkgload", "plyr", "PNADcIBGE", "PNSIBGE", "prettyunits", "processx", "progress", "ps", "purrr", "quantmod", "quantreg", "R.utils", "ragg", "Rcpp", "RcppEigen", "RCurl", "readr", "rematch", "reprex", "rio", "rlang", "rmarkdown", "roxygen2", "rprojroot", "RSQLite", "SAScii", "sass", "scales", "sfheaders", "shiny", "stringi", "stringr", "systemfonts", "testthat", "textshaping", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml"))
install.packages(c("askpass", "brew", "brio", "bslib", "checkmate", "cli", "convey", "cpp11", "credentials", "crosstalk", "curl", "data.table", "datawizard", "DBI", "dbplyr", "desc", "descr", "digest", "dplyr", "DT", "evaluate", "fansi", "fontawesome", "fs", "gargle", "geobr", "geometries", "gert", "ggplot2", "ggrepel", "glue", "gtable", "haven", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr2", "insight", "jsonlite", "knitr", "labeling", "later", "lifecycle", "lme4", "lubridate", "markdown", "Matrix", "MatrixModels", "memisc", "minqa", "openssl", "pkgbuild", "pkgload", "plyr", "PNADcIBGE", "PNSIBGE", "prettyunits", "processx", "progress", "ps", "purrr", "quantmod", "quantreg", "R.utils", "ragg", "Rcpp", "RcppEigen", "RCurl", "readr", "rematch", "reprex", "rio", "rlang", "rmarkdown", "roxygen2", "rprojroot", "RSQLite", "SAScii", "sass", "scales", "sfheaders", "shiny", "stringi", "stringr", "systemfonts", "testthat", "textshaping", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml"))
install.packages(c("askpass", "brew", "brio", "bslib", "checkmate", "cli", "convey", "cpp11", "credentials", "crosstalk", "curl", "data.table", "datawizard", "DBI", "dbplyr", "desc", "descr", "digest", "dplyr", "DT", "evaluate", "fansi", "fontawesome", "fs", "gargle", "geobr", "geometries", "gert", "ggplot2", "ggrepel", "glue", "gtable", "haven", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr2", "insight", "jsonlite", "knitr", "labeling", "later", "lifecycle", "lme4", "lubridate", "markdown", "Matrix", "MatrixModels", "memisc", "minqa", "openssl", "pkgbuild", "pkgload", "plyr", "PNADcIBGE", "PNSIBGE", "prettyunits", "processx", "progress", "ps", "purrr", "quantmod", "quantreg", "R.utils", "ragg", "Rcpp", "RcppEigen", "RCurl", "readr", "rematch", "reprex", "rio", "rlang", "rmarkdown", "roxygen2", "rprojroot", "RSQLite", "SAScii", "sass", "scales", "sfheaders", "shiny", "stringi", "stringr", "systemfonts", "testthat", "textshaping", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml"))
install.packages(c("askpass", "brew", "brio", "bslib", "checkmate", "cli", "convey", "cpp11", "credentials", "crosstalk", "curl", "data.table", "datawizard", "DBI", "dbplyr", "desc", "descr", "digest", "dplyr", "DT", "evaluate", "fansi", "fontawesome", "fs", "gargle", "geobr", "geometries", "gert", "ggplot2", "ggrepel", "glue", "gtable", "haven", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr2", "insight", "jsonlite", "knitr", "labeling", "later", "lifecycle", "lme4", "lubridate", "markdown", "Matrix", "MatrixModels", "memisc", "minqa", "openssl", "pkgbuild", "pkgload", "plyr", "PNADcIBGE", "PNSIBGE", "prettyunits", "processx", "progress", "ps", "purrr", "quantmod", "quantreg", "R.utils", "ragg", "Rcpp", "RcppEigen", "RCurl", "readr", "rematch", "reprex", "rio", "rlang", "rmarkdown", "roxygen2", "rprojroot", "RSQLite", "SAScii", "sass", "scales", "sfheaders", "shiny", "stringi", "stringr", "systemfonts", "testthat", "textshaping", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml"))
install.packages(c("askpass", "brew", "brio", "bslib", "checkmate", "cli", "convey", "cpp11", "credentials", "crosstalk", "curl", "data.table", "datawizard", "DBI", "dbplyr", "desc", "descr", "digest", "dplyr", "DT", "evaluate", "fansi", "fontawesome", "fs", "gargle", "geobr", "geometries", "gert", "ggplot2", "ggrepel", "glue", "gtable", "haven", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr2", "insight", "jsonlite", "knitr", "labeling", "later", "lifecycle", "lme4", "lubridate", "markdown", "Matrix", "MatrixModels", "memisc", "minqa", "openssl", "pkgbuild", "pkgload", "plyr", "PNADcIBGE", "PNSIBGE", "prettyunits", "processx", "progress", "ps", "purrr", "quantmod", "quantreg", "R.utils", "ragg", "Rcpp", "RcppEigen", "RCurl", "readr", "rematch", "reprex", "rio", "rlang", "rmarkdown", "roxygen2", "rprojroot", "RSQLite", "SAScii", "sass", "scales", "sfheaders", "shiny", "stringi", "stringr", "systemfonts", "testthat", "textshaping", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml"))
install.packages(c("askpass", "brew", "brio", "bslib", "checkmate", "cli", "convey", "cpp11", "credentials", "crosstalk", "curl", "data.table", "datawizard", "DBI", "dbplyr", "desc", "descr", "digest", "dplyr", "DT", "evaluate", "fansi", "fontawesome", "fs", "gargle", "geobr", "geometries", "gert", "ggplot2", "ggrepel", "glue", "gtable", "haven", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr2", "insight", "jsonlite", "knitr", "labeling", "later", "lifecycle", "lme4", "lubridate", "markdown", "Matrix", "MatrixModels", "memisc", "minqa", "openssl", "pkgbuild", "pkgload", "plyr", "PNADcIBGE", "PNSIBGE", "prettyunits", "processx", "progress", "ps", "purrr", "quantmod", "quantreg", "R.utils", "ragg", "Rcpp", "RcppEigen", "RCurl", "readr", "rematch", "reprex", "rio", "rlang", "rmarkdown", "roxygen2", "rprojroot", "RSQLite", "SAScii", "sass", "scales", "sfheaders", "shiny", "stringi", "stringr", "systemfonts", "testthat", "textshaping", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml"))
install.packages("xfun")
install.packages("xfun")
install.packages(c("cli", "data.table", "digest", "htmltools", "rlang"))
