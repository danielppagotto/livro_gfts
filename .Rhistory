ind_prof_goias <- read_csv("bases_apoio/ind_prof_goias.csv") %>%
distinct()
#| warning: FALSE
ind_prof_goias <- ind_prof_goias %>%
mutate(sexo = get_gender(NOMEPROF))
#| warning: FALSE
ind_prof_goias <- ind_prof_goias %>%
filter(sexo != 'NA') %>%
count(CODUFMUN, sexo) %>%
group_by(CODUFMUN) %>%
mutate(freq = n / sum(n)) %>%
mutate(freq = round(freq, 2)) %>%
filter(sexo == "Female")
maps_GO <- read_csv("bases_apoio/ind_prof_goias.csv") %>%
distinct()
#| warning: FALSE
#| output: FALSE
go <- read_municipality(code_muni = "GO", year = 2020)
go$code_muni <- as.character(go$code_muni)
go <- go %>%
mutate(cod_muni_6 = substr(code_muni, 1, 6))
shapefile_combinado <- merge(x = go,
y = ind_prof_goias,
by.x = "cod_muni_6",
by.y = "CODUFMUN")
#| warning: FALSE
#| output: FALSE
shapefile_combinado |>
mapview(zcol = "freq")
#| warning: FALSE
#| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
install.packages(c("askpass", "brew", "brio", "bslib", "checkmate", "cli", "convey", "cpp11", "credentials", "crosstalk", "curl", "data.table", "datawizard", "DBI", "dbplyr", "desc", "descr", "digest", "dplyr", "DT", "evaluate", "fansi", "fontawesome", "fs", "gargle", "geobr", "geometries", "gert", "ggplot2", "ggrepel", "glue", "gtable", "haven", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr2", "insight", "jsonlite", "knitr", "labeling", "later", "lifecycle", "lme4", "lubridate", "markdown", "Matrix", "MatrixModels", "memisc", "minqa", "openssl", "pkgbuild", "pkgload", "plyr", "PNADcIBGE", "PNSIBGE", "prettyunits", "processx", "progress", "ps", "purrr", "quantmod", "quantreg", "R.utils", "ragg", "Rcpp", "RcppEigen", "RCurl", "readr", "rematch", "reprex", "rio", "rlang", "rmarkdown", "roxygen2", "rprojroot", "RSQLite", "SAScii", "sass", "scales", "sfheaders", "shiny", "stringi", "stringr", "systemfonts", "testthat", "textshaping", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml"))
install.packages(c("askpass", "brew", "brio", "bslib", "checkmate", "cli", "convey", "cpp11", "credentials", "crosstalk", "curl", "data.table", "datawizard", "DBI", "dbplyr", "desc", "descr", "digest", "dplyr", "DT", "evaluate", "fansi", "fontawesome", "fs", "gargle", "geobr", "geometries", "gert", "ggplot2", "ggrepel", "glue", "gtable", "haven", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr2", "insight", "jsonlite", "knitr", "labeling", "later", "lifecycle", "lme4", "lubridate", "markdown", "Matrix", "MatrixModels", "memisc", "minqa", "openssl", "pkgbuild", "pkgload", "plyr", "PNADcIBGE", "PNSIBGE", "prettyunits", "processx", "progress", "ps", "purrr", "quantmod", "quantreg", "R.utils", "ragg", "Rcpp", "RcppEigen", "RCurl", "readr", "rematch", "reprex", "rio", "rlang", "rmarkdown", "roxygen2", "rprojroot", "RSQLite", "SAScii", "sass", "scales", "sfheaders", "shiny", "stringi", "stringr", "systemfonts", "testthat", "textshaping", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml"))
install.packages(c("askpass", "brew", "brio", "bslib", "checkmate", "cli", "convey", "cpp11", "credentials", "crosstalk", "curl", "data.table", "datawizard", "DBI", "dbplyr", "desc", "descr", "digest", "dplyr", "DT", "evaluate", "fansi", "fontawesome", "fs", "gargle", "geobr", "geometries", "gert", "ggplot2", "ggrepel", "glue", "gtable", "haven", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr2", "insight", "jsonlite", "knitr", "labeling", "later", "lifecycle", "lme4", "lubridate", "markdown", "Matrix", "MatrixModels", "memisc", "minqa", "openssl", "pkgbuild", "pkgload", "plyr", "PNADcIBGE", "PNSIBGE", "prettyunits", "processx", "progress", "ps", "purrr", "quantmod", "quantreg", "R.utils", "ragg", "Rcpp", "RcppEigen", "RCurl", "readr", "rematch", "reprex", "rio", "rlang", "rmarkdown", "roxygen2", "rprojroot", "RSQLite", "SAScii", "sass", "scales", "sfheaders", "shiny", "stringi", "stringr", "systemfonts", "testthat", "textshaping", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml"))
install.packages(c("askpass", "brew", "brio", "bslib", "checkmate", "cli", "convey", "cpp11", "credentials", "crosstalk", "curl", "data.table", "datawizard", "DBI", "dbplyr", "desc", "descr", "digest", "dplyr", "DT", "evaluate", "fansi", "fontawesome", "fs", "gargle", "geobr", "geometries", "gert", "ggplot2", "ggrepel", "glue", "gtable", "haven", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr2", "insight", "jsonlite", "knitr", "labeling", "later", "lifecycle", "lme4", "lubridate", "markdown", "Matrix", "MatrixModels", "memisc", "minqa", "openssl", "pkgbuild", "pkgload", "plyr", "PNADcIBGE", "PNSIBGE", "prettyunits", "processx", "progress", "ps", "purrr", "quantmod", "quantreg", "R.utils", "ragg", "Rcpp", "RcppEigen", "RCurl", "readr", "rematch", "reprex", "rio", "rlang", "rmarkdown", "roxygen2", "rprojroot", "RSQLite", "SAScii", "sass", "scales", "sfheaders", "shiny", "stringi", "stringr", "systemfonts", "testthat", "textshaping", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml"))
install.packages(c("askpass", "brew", "brio", "bslib", "checkmate", "cli", "convey", "cpp11", "credentials", "crosstalk", "curl", "data.table", "datawizard", "DBI", "dbplyr", "desc", "descr", "digest", "dplyr", "DT", "evaluate", "fansi", "fontawesome", "fs", "gargle", "geobr", "geometries", "gert", "ggplot2", "ggrepel", "glue", "gtable", "haven", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr2", "insight", "jsonlite", "knitr", "labeling", "later", "lifecycle", "lme4", "lubridate", "markdown", "Matrix", "MatrixModels", "memisc", "minqa", "openssl", "pkgbuild", "pkgload", "plyr", "PNADcIBGE", "PNSIBGE", "prettyunits", "processx", "progress", "ps", "purrr", "quantmod", "quantreg", "R.utils", "ragg", "Rcpp", "RcppEigen", "RCurl", "readr", "rematch", "reprex", "rio", "rlang", "rmarkdown", "roxygen2", "rprojroot", "RSQLite", "SAScii", "sass", "scales", "sfheaders", "shiny", "stringi", "stringr", "systemfonts", "testthat", "textshaping", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml"))
install.packages(c("askpass", "brew", "brio", "bslib", "checkmate", "cli", "convey", "cpp11", "credentials", "crosstalk", "curl", "data.table", "datawizard", "DBI", "dbplyr", "desc", "descr", "digest", "dplyr", "DT", "evaluate", "fansi", "fontawesome", "fs", "gargle", "geobr", "geometries", "gert", "ggplot2", "ggrepel", "glue", "gtable", "haven", "Hmisc", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr2", "insight", "jsonlite", "knitr", "labeling", "later", "lifecycle", "lme4", "lubridate", "markdown", "Matrix", "MatrixModels", "memisc", "minqa", "openssl", "pkgbuild", "pkgload", "plyr", "PNADcIBGE", "PNSIBGE", "prettyunits", "processx", "progress", "ps", "purrr", "quantmod", "quantreg", "R.utils", "ragg", "Rcpp", "RcppEigen", "RCurl", "readr", "rematch", "reprex", "rio", "rlang", "rmarkdown", "roxygen2", "rprojroot", "RSQLite", "SAScii", "sass", "scales", "sfheaders", "shiny", "stringi", "stringr", "systemfonts", "testthat", "textshaping", "timechange", "timeDate", "tinytex", "tseries", "TTR", "utf8", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "xml2", "xts", "yaml"))
install.packages("xfun")
install.packages("xfun")
install.packages(c("cli", "data.table", "digest", "htmltools", "rlang"))
update.packages(ask = FALSE, checkBuilt = TRUE)
'SELECT * FROM "Analytics Layer".Infraestrutura."Quantidade de equipamentos por região saúde"
WHERE ano = 2020 AND mes = 1'
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
#| warning: FALSE
#| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
#| warning: FALSE
#| output: FALSE
equipamento_1000_habitantes <- read_csv("bases_apoio/equipamento_1000_habitantes.csv")
#| warning: FALSE
#| output: FALSE
equipamento_1000_habitantes <- read_csv("bases_apoio/equipamento_1000_habitantes.csv")
View(equipamento_1000_habitantes)
# Chunk 1
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
#| echo: FALSE
#| output: FALSE
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
# Chunk 1
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
# Chunk 1
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
# Chunk 2
#| echo: FALSE
#| output: FALSE
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
# Chunk 1
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
# Chunk 2
#| echo: FALSE
#| output: FALSE
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
# Chunk 3
#| warning: FALSE
#| eval: FALSE
cnes_pf_rr <- fetch_datasus(year_start = 2023, month_start = 1,
year_end = 2023, month_end = 1,
uf = "RR", information_system = "CNES-PF")
# Chunk 1
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
# Chunk 2
#| echo: FALSE
#| output: FALSE
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
# Chunk 3
#| warning: FALSE
#| eval: FALSE
cnes_pf_rr <- fetch_datasus(year_start = 2023, month_start = 1,
year_end = 2023, month_end = 1,
uf = "RR", information_system = "CNES-PF")
# Chunk 4
#| warning: FALSE
#| eval: FALSE
cnes_tratado <-
cnes_pf_manutencao |>
filter(str_detect(CBO, "2235")) |>
select(CODUFMUN, CBO, VINCULAC)
# Chunk 1
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
# Chunk 2
#| echo: FALSE
#| output: FALSE
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
# Chunk 3
#| warning: FALSE
#| eval: FALSE
cnes_pf_rr <- fetch_datasus(year_start = 2023, month_start = 1,
year_end = 2023, month_end = 1,
uf = "RR", information_system = "CNES-PF")
# Chunk 4
#| warning: FALSE
#| eval: FALSE
cnes_tratado <-
cnes_pf_manutencao |>
filter(str_detect(CBO, "2235")) |>
select(CODUFMUN, CBO, VINCULAC)
# Chunk 5
#| warning: FALSE
#| eval: FALSE
vinculac <- read_delim("bases_apoio/vinculac.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
vinculac |>
datatable()
# Chunk 1
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
# Chunk 2
#| echo: FALSE
#| output: FALSE
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
# Chunk 3
#| warning: FALSE
#| eval: FALSE
cnes_pf_rr <- fetch_datasus(year_start = 2023, month_start = 1,
year_end = 2023, month_end = 1,
uf = "RR", information_system = "CNES-PF")
# Chunk 4
#| warning: FALSE
#| eval: FALSE
cnes_tratado <-
cnes_pf_manutencao |>
filter(str_detect(CBO, "2235")) |>
select(CODUFMUN, CBO, VINCULAC)
# Chunk 5
#| warning: FALSE
#| eval: FALSE
vinculac <- read_delim("bases_apoio/vinculac.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
vinculac |>
datatable()
# Chunk 6
#| warning: FALSE
#| eval: FALSE
# transformando a variável para tipo numérico para conseguir juntar
cnes_tratado$VINCULAC <- as.numeric(cnes_tratado$VINCULAC)
# Juntar conforme as duas colunas equivalentes - VINCULAC e CHAVE
cnes_join <-
cnes_tratado |>
left_join(vinculac, by = c("VINCULAC"="CHAVE"))
cnes_join |>
head()
# Chunk 1
#| warning: FALSE
#| #| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
# Chunk 2
#| echo: FALSE
#| output: FALSE
cnes_pf_manutencao <- read_csv("bases_apoio/cnes_pf_manutencao.csv")
# Chunk 3
#| warning: FALSE
#| eval: FALSE
cnes_pf_rr <- fetch_datasus(year_start = 2023, month_start = 1,
year_end = 2023, month_end = 1,
uf = "RR", information_system = "CNES-PF")
# Chunk 4
#| warning: FALSE
#| eval: FALSE
cnes_tratado <-
cnes_pf_manutencao |>
filter(str_detect(CBO, "2235")) |>
select(CODUFMUN, CBO, VINCULAC)
# Chunk 5
#| warning: FALSE
#| eval: FALSE
vinculac <- read_delim("bases_apoio/vinculac.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
vinculac |>
datatable()
# Chunk 6
#| warning: FALSE
#| eval: FALSE
# transformando a variável para tipo numérico para conseguir juntar
cnes_tratado$VINCULAC <- as.numeric(cnes_tratado$VINCULAC)
# Juntar conforme as duas colunas equivalentes - VINCULAC e CHAVE
cnes_join <-
cnes_tratado |>
left_join(vinculac, by = c("VINCULAC"="CHAVE"))
cnes_join |>
head()
# Chunk 7
#| warning: FALSE
#| eval: FALSE
cnes_join <-
cnes_join |>
count(CODUFMUN, classificacao) %>%
group_by(CODUFMUN) %>%
mutate(freq = n / sum(n)) |>
mutate(freq = round(freq, 2))
hierarquia_municipios <- read_excel("bases_apoio/hierarquia_municipios.xlsx")
precarizacao <-
cnes_join |>
left_join(hierarquia_municipios, by = c("CODUFMUN"="cod_municipio")) |>
select(CODUFMUN, cod_municipiodv, municipio, uf_sigla, classificacao, freq )
precarizacao |>
datatable()
# Chunk 8
#| warning: FALSE
#| eval: FALSE
precarizacao <-
precarizacao |>
filter(classificacao == "Precarizado")
# Chunk 9
#| warning: FALSE
#| output: FALSE
rr <- read_municipality(code_muni = "RR", year = 2020)
rr$code_muni <- as.character(rr$code_muni)
shapefile_combinado <- merge(x = rr,
y = precarizacao,
by.x = "code_muni",
by.y = "cod_municipiodv")
# Chunk 10
#| warning: FALSE
#| eval: FALSE
shapefile_combinado |>
mapview(zcol = "freq")
#| echo: FALSE
#| output: FALSE
ch_media_capitais <- read_csv("bases_apoio/ch_media_capitais.csv")
hierarquia_municipios <- read_excel("bases_apoio/hierarquia_municipios.xlsx")
#| warning: FALSE
#| eval: FALSE
ch_media_capitais <- ch_media_capitais %>%
left_join(hierarquia_municipios, by = c("CODUFMUN" = "cod_municipio")) %>%
select("municipio_pad", "MEDIA_PROF")
#| warning: FALSE
#| eval: FALSE
ch_media_capitais %>%
mutate(municipio_pad = fct_reorder(municipio_pad, MEDIA_PROF)) %>%
ggplot(aes(x = municipio_pad, y = MEDIA_PROF)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "Capitais", y = "Média de horas trabalhadas", title = "Carga horária de trabalho média")
equipamento_1000_habitantes %>%
mutate(regiao_saude = fct_reorder(regiao_saude, equipamento_1000_habitantes)) %>%
ggplot(aes(x = regiao_saude, y = equipamento_1000_habitantes)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "Capitais", y = "Média de horas trabalhadas", title = "Carga horária de trabalho média")
equipamento_1000_habitantes %>%
mutate(regiao_saude = fct_reorder(regiao_saude, equipamento_1000_habitantes)) %>%
ggplot(aes(x = regiao_saude, y = equipamento_1000_habitantes)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "Capitais", y = "Média de horas trabalhadas", title = "Carga horária de trabalho média")
ggplot(equipamento_1000_habitantes, aes(x = regiao_saude, y = equipamento_1000_habitantes)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Equipamento por 1000 Habitantes por Região de Saúde",
x = "Região de Saúde",
y = "Equipamento por 1000 Habitantes")
ggplot(equipamento_1000_habitantes, aes(x = regiao_saude, y = equipamento_1000_habitantes)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +
labs(title = "Equipamento por 1000 Habitantes por Região de Saúde",
x = "Região de Saúde",
y = "Equipamento por 1000 Habitantes")
#| warning: FALSE
#| output: FALSE
equipamento_paraná <- read_csv("bases_apoio/equipamento_1000_habitantes.csv")
#| warning: FALSE
#| output: FALSE
equipamento_parana <- read_csv("bases_apoio/equipamento_1000_habitantes.csv")
#| warning: FALSE
#| eval: FALSE
equipamento_parana %>%
mutate(regiao_saude = fct_reorder(regiao_saude, equipamento_1000_habitantes)) %>%
ggplot(aes(x = regiao_saude, y = equipamento_1000_habitantes)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "Regiões de Saúde do Paraná", y = "Densidade de Equipamentos",
title = "Quantidade de equipamentos por mil habitantes")
#| warning: FALSE
#| eval: FALSE
equipamento_parana %>%
mutate(regiao_saude = fct_reorder(regiao_saude, equipamento_1000_habitantes)) %>%
ggplot(aes(x = regiao_saude, y = equipamento_1000_habitantes)) +
geom_col(fill = "skyblue",color = "White") +
coord_flip() +
theme_bw() +
labs(x = "Regiões de Saúde", y = "Densidade de Equipamentos",
title = "Quantidade de equipamentos por mil habitantes do Paraná")
#| warning: FALSE
#| eval: FALSE
quantidade_leitos <- read_csv("bases_apoio/quantidade_leitos.csv")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
quantidade_leitos <- read_csv("bases_apoio/quantidade_leitos.csv")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
quantidade_leitos <- read_csv("bases_apoio/quantidade_leitos.csv")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
ggplot(dados, aes(x = competen_ano, y = total_leitos_uti)) +
geom_line(color = "blue") +
labs(title = "Evolução dos Leitos de UTI ao Longo dos Anos",
x = "Ano",
y = "Total de Leitos de UTI")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
ggplot(dados, aes(x = ano, y = total_leitos_uti)) +
geom_line(color = "blue") +
labs(title = "Evolução dos Leitos de UTI ao Longo dos Anos",
x = "Ano",
y = "Total de Leitos de UTI")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
ggplot(dados, aes(x = ano, y = total_leitos_uti)) +
geom_line(color = "blue") +
labs(title = "Evolução dos Leitos de UTI ao Longo dos Anos",
x = "Ano",
y = "Total de Leitos de UTI")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
ggplot(quantidade_leitos, aes(x = ano, y = total_leitos_uti)) +
geom_line(color = "blue") +
labs(title = "Evolução dos Leitos de UTI ao Longo dos Anos",
x = "Ano",
y = "Total de Leitos de UTI")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
ggplot(quantidade_leitos, aes(x = ano, y = total_leitos_uti)) +
geom_line(color = "blue") +
labs(title = "Quantidade de Leitos de UTI ao Longo dos Anos",
x = "Ano",
y = "Total de Leitos de UTI")
#| warning: FALSE
#| eval: FALSE
#| echo: FALSE
#| output: FALSE
ggplot(quantidade_leitos, aes(x = ano, y = total_leitos_uti)) +
geom_line(color = "blue") +
labs(title = "Quantidade de Leitos de UTI ao Longo dos Anos em Belém",
x = "Ano",
y = "Total de Leitos de UTI")
#| warning: FALSE
#| output: FALSE
library(readr)
library(readxl)
library(dplyr)
library(genderBR)
library(microdatasus)
library(tidyverse)
library(DT)
library(mapview)
library(geobr)
library(forcats)
library(ggplot2)
